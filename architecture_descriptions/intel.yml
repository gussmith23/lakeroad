# This was our old, prototype implementation of Intel support, supporting the
# generic-ish altmult_accum block found in Quartus. It's unclear what
# architecture this is actually for. We are adding support for a specific Intel
# architecture (Cyclone 10 LP) instead.
implementations:
  - interface: { name: DSP, parameters: { out-width: 36, a-width: 18, b-width: 18, c-width: 36 } }
    internal_data: 
      input_reg_a: 5
      input_aclr_a: 5
      multiplier1_direction: 5
      multiplier3_direction: 5
      input_reg_b: 5
      input_aclr_b: 5
      port_addnsub: 5
      addnsub_reg: 5
      addnsub_aclr: 5
      addnsub_pipeline_reg: 5
      addnsub_pipeline_aclr: 5
      accum_direction: 5
      accum_sload_reg: 5
      accum_sload_aclr: 5
      accum_sload_pipeline_reg : 5
      accum_sload_pipeline_aclr: 5
      representation_a: 5
      port_signa: 5
      sign_reg_a: 5
      sign_aclr_a: 5
      sign_pipeline_reg_a: 5
      sign_pipeline_aclr_a: 5
      port_signb: 5
      representation_b: 5
      sign_reg_b: 5
      sign_aclr_b: 5
      sign_pipeline_reg_b: 5
      sign_pipeline_aclr_b: 5
      multiplier_reg: 5
      multiplier_aclr: 5
      output_reg: 5
      output_aclr: 5
      lpm_type: 5
      lpm_hint: 5
      dedicated_multiplier_circuitry: 5
      dsp_block_balancing: 5
      intended_device_family: 5
      accum_round_aclr: 5
      accum_round_pipeline_aclr: 5
      accum_round_pipeline_reg: 5
      accum_round_reg: 5
      accum_saturation_aclr: 5
      accum_saturation_pipeline_aclr: 5
      accum_saturation_pipeline_reg: 5
      accum_saturation_reg: 5
      accum_sload_upper_data_aclr: 5
      accum_sload_upper_data_pipeline_aclr: 5
      accum_sload_upper_data_pipeline_reg: 5
      accum_sload_upper_data_reg: 5
      mult_round_aclr: 5
      mult_round_reg: 5
      mult_saturation_aclr: 5
      mult_saturation_reg: 5
      input_source_a: 5
      input_source_b: 5
      port_mult_is_saturated: 1
      port_accum_is_saturated: 1

      sourcea: 1
      sourceb: 1
      addnsub: 1
      accum_sload: 1
      mult_round: 1
      mult_saturation: 1
      accum_round: 1
      accum_saturation: 1
      signa: 1
      signb: 1
    constraints: [
      "(|| (bveq accum_round_aclr (bv 0 5)) (bveq accum_round_aclr (bv 1 5))  (bveq accum_round_aclr (bv 2 5)) (bveq accum_round_aclr (bv 3 5)))",
      "(|| (bveq addnsub_pipeline_aclr (bv 0 5)) (bveq addnsub_pipeline_aclr (bv 1 5))  (bveq addnsub_pipeline_aclr (bv 2 5)) (bveq addnsub_pipeline_aclr (bv 3 5)))",
      "(|| (bveq accum_sload_pipeline_aclr (bv 0 5)) (bveq accum_sload_pipeline_aclr (bv 1 5))  (bveq accum_sload_pipeline_aclr (bv 2 5)) (bveq accum_sload_pipeline_aclr (bv 3 5)))",
      "(|| (bveq sign_pipeline_aclr_a (bv 0 5)) (bveq sign_pipeline_aclr_a (bv 1 5))  (bveq sign_pipeline_aclr_a (bv 2 5)) (bveq sign_pipeline_aclr_a (bv 3 5)))",
      "(|| (bveq sign_pipeline_aclr_b (bv 0 5)) (bveq sign_pipeline_aclr_b (bv 1 5))  (bveq sign_pipeline_aclr_b (bv 2 5)) (bveq sign_pipeline_aclr_b (bv 3 5)))",
      "(|| (bveq multiplier_aclr (bv 0 5)) (bveq multiplier_aclr (bv 1 5))  (bveq multiplier_aclr (bv 2 5)) (bveq multiplier_aclr (bv 3 5)))",

    ]
    modules:
      - module_name: altmult_accum
        instance_name: altmult_accum
        filepath: unused
        racket_import_filepath: unused
        ports: [
          { name: clock0, direction: input, bitwidth: 1, value: clk },
          { name: clock1, direction: input, bitwidth: 1, value: clk },
          { name: clock2, direction: input, bitwidth: 1, value: clk },
          { name: clock3, direction: input, bitwidth: 1, value: clk },
          { name: dataa, direction: input, bitwidth: 18, value: A },
          { name: datab, direction: input, bitwidth: 18, value: B },
          { name: result, direction: output, bitwidth: 36, value: unused },
          { name: datac, direction: input, bitwidth: 36, value: C },
          { name: scanina, direction: input, bitwidth: 18, value: (bv 0 18) },
          { name: scaninb, direction: input, bitwidth: 18, value: (bv 0 18) },
          { name: sourcea, direction: input, bitwidth: 1, value: sourcea },
          { name: sourceb, direction: input, bitwidth: 1, value: sourceb },
          { name: accum_sload_upper_data, direction: input, bitwidth: 1, value: (bv 0 1) },
          { name: addnsub,  direction: input, bitwidth: 1, value: addnsub },
          { name: accum_sload,  direction: input, bitwidth: 1, value: accum_sload },
          { name: signa, direction: input, bitwidth: 1, value: (choose (bit 17 A) signa) },
          { name: signb, direction: input, bitwidth: 1, value: (choose (bit 17 B) signb) },
          { name: ena0, direction: input, bitwidth: 1, value: (bv 1 1) },
          { name: ena1, direction: input, bitwidth: 1, value: (bv 1 1) },
          { name: ena2, direction: input, bitwidth: 1, value: (bv 1 1) },
          { name: ena3, direction: input, bitwidth: 1, value: (bv 1 1) },
          { name: aclr0, direction: input, bitwidth: 1, value: (bv 0 1) },
          { name: aclr1, direction: input, bitwidth: 1, value: (bv 0 1) },
          { name: aclr2, direction: input, bitwidth: 1, value: (bv 0 1) },
          { name: aclr3, direction: input, bitwidth: 1, value: (bv 0 1) },
          { name: mult_round, direction: input, bitwidth: 1, value: mult_round },
          { name: mult_saturation, direction: input, bitwidth: 1, value: mult_saturation },
          { name: accum_round, direction: input, bitwidth: 1, value: accum_round },
          { name: accum_saturation, direction: input, bitwidth: 1, value: accum_saturation },
          { name: coefsel0, direction: input, bitwidth: 3, value: (bv 0 3) },
          { name: coefsel1, direction: input, bitwidth: 3, value: (bv 0 3) },
          { name: coefsel2, direction: input, bitwidth: 3, value: (bv 0 3) },
          { name: coefsel3, direction: input, bitwidth: 3, value: (bv 0 3) },

          # Outputs aren't needed for now.
          # { name: overflow, direction: output, bitwidth: , value: unused },
          # { name: scanouta, direction: output, bitwidth: , value: unused },
          # { name: scanoutb, direction: output, bitwidth: , value: unused },
          # { name: mult_is_saturated, direction: output, bitwidth: , value: unused },
          # { name: accum_is_saturated, direction: output, bitwidth: , value: unused },
     
        ]
        parameters: [
          {name: input_reg_a, value: input_reg_a},
          {name: input_aclr_a, value: input_aclr_a},
          {name: multiplier1_direction, value: multiplier1_direction},
          {name: multiplier3_direction, value: multiplier3_direction},
          {name: input_reg_b, value: input_reg_b},
          {name: input_aclr_b, value: input_aclr_b},
          {name: port_addnsub, value: port_addnsub},
          {name: addnsub_reg, value: addnsub_reg},
          {name: addnsub_aclr, value: addnsub_aclr},
          {name: addnsub_pipeline_reg, value: addnsub_pipeline_reg},
          {name: addnsub_pipeline_aclr, value: addnsub_pipeline_aclr},
          {name: accum_direction, value: accum_direction},
          {name: accum_sload_reg, value: accum_sload_reg},
          {name: accum_sload_aclr, value: accum_sload_aclr},
          {name: accum_sload_pipeline_reg, value: accum_sload_pipeline_reg },
          {name: accum_sload_pipeline_aclr, value: accum_sload_pipeline_aclr},
          {name: representation_a, value: representation_a},
          {name: port_signa, value: port_signa},
          {name: sign_reg_a, value: sign_reg_a},
          {name: sign_aclr_a, value: sign_aclr_a},
          {name: sign_pipeline_reg_a, value: sign_pipeline_reg_a},
          {name: sign_pipeline_aclr_a, value: sign_pipeline_aclr_a},
          {name: port_signb, value: port_signb},
          {name: representation_b, value: representation_b},
          {name: sign_reg_b, value: sign_reg_b},
          {name: sign_aclr_b, value: sign_aclr_b},
          {name: sign_pipeline_reg_b, value: sign_pipeline_reg_b},
          {name: sign_pipeline_aclr_b, value: sign_pipeline_aclr_b},
          {name: multiplier_reg, value: multiplier_reg},
          {name: multiplier_aclr, value: multiplier_aclr},
          {name: output_reg, value: output_reg},
          {name: output_aclr, value: output_aclr},
          {name: lpm_type, value: lpm_type},
          {name: lpm_hint, value: lpm_hint},
          {name: dedicated_multiplier_circuitry, value: dedicated_multiplier_circuitry},
          {name: dsp_block_balancing, value: dsp_block_balancing},
          {name: intended_device_family, value: intended_device_family},
          {name: accum_round_aclr, value: accum_round_aclr},
          {name: accum_round_pipeline_aclr, value: accum_round_pipeline_aclr},
          {name: accum_round_pipeline_reg, value: accum_round_pipeline_reg},
          {name: accum_round_reg, value: accum_round_reg},
          {name: accum_saturation_aclr, value: accum_saturation_aclr},
          {name: accum_saturation_pipeline_aclr, value: accum_saturation_pipeline_aclr},
          {name: accum_saturation_pipeline_reg, value: accum_saturation_pipeline_reg},
          {name: accum_saturation_reg, value: accum_saturation_reg},
          {name: accum_sload_upper_data_aclr, value: accum_sload_upper_data_aclr},
          {name: accum_sload_upper_data_pipeline_aclr, value: accum_sload_upper_data_pipeline_aclr},
          {name: accum_sload_upper_data_pipeline_reg, value: accum_sload_upper_data_pipeline_reg},
          {name: accum_sload_upper_data_reg, value: accum_sload_upper_data_reg},
          {name: mult_round_aclr, value: mult_round_aclr},
          {name: mult_round_reg, value: mult_round_reg},
          {name: mult_saturation_aclr, value: mult_saturation_aclr},
          {name: mult_saturation_reg, value: mult_saturation_reg},
          {name: input_source_a, value: input_source_a},
          {name: input_source_b, value: input_source_b},
          {name: port_mult_is_saturated, value: port_mult_is_saturated},
          {name: port_accum_is_saturated, value: port_accum_is_saturated},
        ]
    outputs: { O : (get altmult_accum result) }