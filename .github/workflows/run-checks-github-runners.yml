name: Run checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Run at 4am PT each day.
  schedule:
  - cron: '0 11 * * *'

  # Allow manual trigger.
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # Can't use ${{ env.REGISTRY }} here, but would like to, so that we' don't
  # repeat ghcr.io.
  IMAGE_TAG: "ghcr.io/${{ github.actor }}/${{ github.repository }}:${{ github.sha }}"

jobs:

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # If we want to do this more cleanly, we can use metadata-action.
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-to: type=gha
          cache-from: type=gha

  run-tests:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE_TAG }}

      - name: Run tests
        run: docker run ${{ env.IMAGE_TAG }} bash run-tests.sh

  check-format:
    runs-on: self-hosted
    needs: build-and-push-image
    steps:

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE_TAG }}

      - name: Racket format check
        run: |
          docker run ${{ env.IMAGE_TAG }} \
            bash -c 'raco fmt -i racket/*.rkt && [ -z "$(git status --porcelain)" ]'

      - name: Rust format check
        run: docker run ${{ env.IMAGE_TAG }} cargo fmt --manifest-path ./rust/Cargo.toml -- --check
