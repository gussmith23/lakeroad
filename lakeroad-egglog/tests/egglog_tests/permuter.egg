; This file comes from an example permuter design given to us by Intel.

(include "egglog_src/lakeroad.egg")

; wire declarations
; $0\dout[15:0]
(let v0 (Wire "v0" 16))
; $auto$rtlil.cc:2443:Or$13
(let v1 (Wire "v1" 1))
; $auto$rtlil.cc:2509:Mux$11
(let v2 (Wire "v2" 16))
; $auto$rtlil.cc:2509:Mux$9
(let v3 (Wire "v3" 16))
; $procmux$3_CMP
(let v4 (Wire "v4" 1))
; $procmux$4_CMP
(let v5 (Wire "v5" 1))
; $procmux$5_CMP
(let v6 (Wire "v6" 1))
; clk
(let v7 (Wire "v7" 1))
; control
(let v8 (Wire "v8" 2))
; din
(let v9 (Wire "v9" 16))
; dout
(let v10 (Wire "v10" 16))

; cells
(union v1 (Op2 (Or) v5 v4))
; { \din [11:8] \din [15:12] \din [3:0] \din [7:4] }
(let v11 (Extract 7 4 v9))
(let v12 (Extract 3 0 v9))
(let v13 (Extract 15 12 v9))
(let v14 (Extract 11 8 v9))
(let v15 (Concat v11 v12))
(let v16 (Concat v15 v13))
(let v17 (Concat v16 v14))
(union v2 (Op3 (Mux) v6 v9 v17))
(union v0 (Op3 (Mux) v1 v2 v3))
; { \din [7:0] \din [15:8] }
(let v18 (Extract 15 8 v9))
(let v19 (Extract 7 0 v9))
(let v20 (Concat v18 v19))
; { \din [3:0] \din [7:4] \din [11:8] \din [15:12] }
(let v21 (Concat v13 v14))
(let v22 (Concat v21 v11))
(let v23 (Concat v22 v12))
(union v3 (Op3 (Mux) v4 v20 v23))
; TODO: assuming 0 default for Reg
(union v10 (Reg 0 v7 v0))
; 2'11
(let v24 (BV 3 2))
(union v4 (Op2 (Eq) v8 v24))
; 2'10
(let v25 (BV 2 2))
(union v5 (Op2 (Eq) v8 v25))
; 1'1
(let v26 (BV 1 1))
; TODO not handling signedness
(let v27 (ZeroExtend v26 2))
(union v6 (Op2 (Eq) v8 v27))

; inputs
(let clk (Var "clk" 1))
(union v7 clk)
(let control (Var "control" 2))
(union v8 control)
(let din (Var "din" 16))
(union v9 din)

; outputs
(let dout v10)

; delete wire expressions
(delete (Wire "v0" 16))
(delete (Wire "v1" 1))
(delete (Wire "v2" 16))
(delete (Wire "v3" 16))
(delete (Wire "v4" 1))
(delete (Wire "v5" 1))
(delete (Wire "v6" 1))
(delete (Wire "v7" 1))
(delete (Wire "v8" 2))
(delete (Wire "v9" 16))
(delete (Wire "v10" 16))

(run typing 100)

; Check a bunch of types.
(check (HasType v4 (Bitvector 1)))
(check (HasType v1 (Bitvector 1)))
(check (HasType v19 (Bitvector 8)))
(check (HasType v20 (Bitvector 16)))
(check (HasType v9 (Bitvector 16)))
(check (HasType v17 (Bitvector 16)))
(check (HasType v6 (Bitvector 1)))
(check (HasType v2 (Bitvector 16)))
(check (HasType v3 (Bitvector 16)))
(check (HasType v0 (Bitvector 16)))
(check (HasType dout (Bitvector 16)))

;;; Run all rewrites to propose LUT mapping.
(run-schedule 
  (repeat 100
    (saturate typing) 
    (saturate sketch-proposal)
    (saturate misc))) 

(extract dout)
