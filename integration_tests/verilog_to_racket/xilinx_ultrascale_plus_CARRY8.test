RUN: $LAKEROAD_DIR/bin/verilog_to_racket.py \
RUN:   --infile $LAKEROAD_DIR/modules_for_importing/xilinx_ultrascale_plus/CARRY8.v \
RUN:   --top CARRY8 \
RUN:   --function-name xilinx-ultrascale-plus-carry8 \
RUN: | FileCheck %s

CHECK: #lang racket/base
CHECK: (provide xilinx-ultrascale-plus-carry8)
CHECK: (require (file "

CHECK: (require rosette)
CHECK: (require racket/hash)
CHECK: (define xilinx-ultrascale-plus-carry8
CHECK:   (Î» (#:CARRY_TYPE
CHECK:       (CARRY_TYPE
CHECK:        (bv->signal
CHECK:         (constant (list 'CARRY_TYPE 'symbolic-constant) (bitvector 1))))
CHECK:       #:CI
CHECK:       (CI (bv->signal (constant (list 'CI 'symbolic-constant) (bitvector 1))))
CHECK:       #:CI_TOP
CHECK:       (CI_TOP
CHECK:        (bv->signal (constant (list 'CI_TOP 'symbolic-constant) (bitvector 1))))
CHECK:       #:DI
CHECK:       (DI (bv->signal (constant (list 'DI 'symbolic-constant) (bitvector 8))))
CHECK:       #:S
CHECK:       (S (bv->signal (constant (list 'S 'symbolic-constant) (bitvector 8)))))
CHECK:     (let* ((merged-input-state-hash (hash))
CHECK:            (init-hash (hash))
CHECK:            (btor1 (bitvector 1))
CHECK:            (btor2 CARRY_TYPE)
CHECK:            (merged-input-state-hash
CHECK:             (hash-union merged-input-state-hash (signal-state CARRY_TYPE)))
CHECK:            (btor3 CI)
CHECK:            (merged-input-state-hash
CHECK:             (hash-union merged-input-state-hash (signal-state CI)))
CHECK:            (btor4 CI_TOP)
CHECK:            (merged-input-state-hash
CHECK:             (hash-union merged-input-state-hash (signal-state CI_TOP)))
CHECK:            (btor5 (bitvector 8))
CHECK:            (btor6 DI)
CHECK:            (merged-input-state-hash
CHECK:             (hash-union merged-input-state-hash (signal-state DI)))
CHECK:            (btor7 S)
CHECK:            (merged-input-state-hash
CHECK:             (hash-union merged-input-state-hash (signal-state S)))
CHECK:            (btor8
CHECK:             (signal (extract 0 0 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor9
CHECK:             (signal (extract 0 0 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor10 (if (bitvector->bool (signal-value btor9)) btor3 btor8))
CHECK:            (btor11
CHECK:             (signal (extract 1 1 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor12
CHECK:             (signal (extract 1 1 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor13 (if (bitvector->bool (signal-value btor12)) btor10 btor11))
CHECK:            (btor14
CHECK:             (signal (extract 2 2 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor15
CHECK:             (signal (extract 2 2 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor16 (if (bitvector->bool (signal-value btor15)) btor13 btor14))
CHECK:            (btor17
CHECK:             (signal (extract 3 3 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor18
CHECK:             (signal (extract 3 3 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor19 (if (bitvector->bool (signal-value btor18)) btor16 btor17))
CHECK:            (btor20
CHECK:             (signal (extract 4 4 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor21 (if (bitvector->bool (signal-value btor2)) btor4 btor19))
CHECK:            (btor22
CHECK:             (signal (extract 4 4 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor23 (if (bitvector->bool (signal-value btor22)) btor21 btor20))
CHECK:            (btor24
CHECK:             (signal (extract 5 5 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor25
CHECK:             (signal (extract 5 5 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor26 (if (bitvector->bool (signal-value btor25)) btor23 btor24))
CHECK:            (btor27
CHECK:             (signal (extract 6 6 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor28
CHECK:             (signal (extract 6 6 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor29 (if (bitvector->bool (signal-value btor28)) btor26 btor27))
CHECK:            (btor30
CHECK:             (signal (extract 7 7 (signal-value btor6)) (signal-state btor6)))
CHECK:            (btor31
CHECK:             (signal (extract 7 7 (signal-value btor7)) (signal-state btor7)))
CHECK:            (btor32 (if (bitvector->bool (signal-value btor31)) btor29 btor30))
CHECK:            (btor33 (bitvector 2))
CHECK:            (btor34
CHECK:             (signal
CHECK:              (concat (signal-value btor13) (signal-value btor10))
CHECK:              (merge-state (list btor13 btor10))))
CHECK:            (btor35 (bitvector 3))
CHECK:            (btor36
CHECK:             (signal
CHECK:              (concat (signal-value btor16) (signal-value btor34))
CHECK:              (merge-state (list btor16 btor34))))
CHECK:            (btor37 (bitvector 4))
CHECK:            (btor38
CHECK:             (signal
CHECK:              (concat (signal-value btor19) (signal-value btor36))
CHECK:              (merge-state (list btor19 btor36))))
CHECK:            (btor39 (bitvector 5))
CHECK:            (btor40
CHECK:             (signal
CHECK:              (concat (signal-value btor23) (signal-value btor38))
CHECK:              (merge-state (list btor23 btor38))))
CHECK:            (btor41 (bitvector 6))
CHECK:            (btor42
CHECK:             (signal
CHECK:              (concat (signal-value btor26) (signal-value btor40))
CHECK:              (merge-state (list btor26 btor40))))
CHECK:            (btor43 (bitvector 7))
CHECK:            (btor44
CHECK:             (signal
CHECK:              (concat (signal-value btor29) (signal-value btor42))
CHECK:              (merge-state (list btor29 btor42))))
CHECK:            (btor45
CHECK:             (signal
CHECK:              (concat (signal-value btor32) (signal-value btor44))
CHECK:              (merge-state (list btor32 btor44))))
CHECK:            (btor47
CHECK:             (signal
CHECK:              (concat (signal-value btor10) (signal-value btor3))
CHECK:              (merge-state (list btor10 btor3))))
CHECK:            (btor48
CHECK:             (signal
CHECK:              (concat (signal-value btor13) (signal-value btor47))
CHECK:              (merge-state (list btor13 btor47))))
CHECK:            (btor49
CHECK:             (signal
CHECK:              (concat (signal-value btor16) (signal-value btor48))
CHECK:              (merge-state (list btor16 btor48))))
CHECK:            (btor50
CHECK:             (signal
CHECK:              (concat (signal-value btor21) (signal-value btor49))
CHECK:              (merge-state (list btor21 btor49))))
CHECK:            (btor51
CHECK:             (signal
CHECK:              (concat (signal-value btor23) (signal-value btor50))
CHECK:              (merge-state (list btor23 btor50))))
CHECK:            (btor52
CHECK:             (signal
CHECK:              (concat (signal-value btor26) (signal-value btor51))
CHECK:              (merge-state (list btor26 btor51))))
CHECK:            (btor53
CHECK:             (signal
CHECK:              (concat (signal-value btor29) (signal-value btor52))
CHECK:              (merge-state (list btor29 btor52))))
CHECK:            (btor54
CHECK:             (signal
CHECK:              (bvxor (signal-value btor7) (signal-value btor53))
CHECK:              (merge-state (list btor7 btor53))))
CHECK:            (btor56
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor21) (bitvector 1))
CHECK:              btor21))
CHECK:            (btor57
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor10) (bitvector 1))
CHECK:              btor10))
CHECK:            (btor58
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor13) (bitvector 1))
CHECK:              btor13))
CHECK:            (btor59
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor16) (bitvector 1))
CHECK:              btor16))
CHECK:            (btor60
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor19) (bitvector 1))
CHECK:              btor19))
CHECK:            (btor61
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor23) (bitvector 1))
CHECK:              btor23))
CHECK:            (btor62
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor26) (bitvector 1))
CHECK:              btor26))
CHECK:            (btor63
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor29) (bitvector 1))
CHECK:              btor29))
CHECK:            (btor64
CHECK:             (bv->signal
CHECK:              (zero-extend (signal-value btor32) (bitvector 1))
CHECK:              btor32)))
CHECK:       (make-immutable-hash
CHECK:        (list
CHECK:         (cons 'CO (signal (signal-value btor45) (hash)))
CHECK:         (cons 'O (signal (signal-value btor54) (hash))))))))

